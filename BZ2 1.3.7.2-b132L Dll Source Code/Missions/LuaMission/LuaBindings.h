#pragma once

#include "..\lua_5_1_5\src\lua.hpp"
#include "..\..\source\fun3d\ScriptUtils.h"
#include "..\Shared\ScriptUtilsExtention.h"

#define lua_pushglobaltable(L) lua_pushvalue(L, LUA_GLOBALSINDEX);

struct lua_State;

extern "C" static void luaL_setfuncs(lua_State *L, const luaL_Reg *l, int nup);
extern "C" void *luaL_testudata(lua_State *L, int ud, const char *tname);
extern "C" static int LuaPrint(lua_State *L);
extern "C" static int LuaPanic(lua_State *L);

namespace LuaScriptUtils {
	static bool LuaCheckStatus(int status, lua_State *L, const char *format);
	static void PushHandle(lua_State *L, Handle h);
	static int GetHandle(lua_State *L);
	static Handle GetHandle(lua_State *L, int n);
	static Handle RequireHandle(lua_State *L, int n);
	static int Handle_ToString(lua_State *L);
	static Vector *GetVector(lua_State *L, int n);
	static Vector *RequireVector(lua_State *L, int n);
	static Vector *NewVector(lua_State *L);
	static Matrix *GetMatrix(lua_State *L, int n);
	static Matrix *RequireMatrix(lua_State *L, int n);
	static Matrix *NewMatrix(lua_State *L);
	static bool luaL_optboolean(lua_State *L, int n, int defval);
	static int Vector_Index(lua_State *L);
	static int Vector_NewIndex(lua_State *L);
	static int Vector_Neg(lua_State *L);
	static int Vector_Add(lua_State *L);
	static int Vector_Sub(lua_State *L);
	static int Vector_Mul(lua_State *L);
	static int Vector_Div(lua_State *L);
	static int Vector_Eq(lua_State *L);
	static int Vector_ToString(lua_State *L);
	static int Matrix_Index(lua_State *L);
	static int Matrix_NewIndex(lua_State *L);
	static int Matrix_Mul(lua_State *L);
	static int Matrix_ToString(lua_State *L);
	static int SetVector(lua_State *L);
	static int DotProduct(lua_State *L);
	static int CrossProduct(lua_State *L);
	static int Normalize(lua_State *L);
	static int Length(lua_State *L);
	static int LengthSquared(lua_State *L);
	static int Distance2D(lua_State *L);
	static int Distance2DSquared(lua_State *L);
	static int Distance3D(lua_State *L);
	static int Distance3DSquared(lua_State *L);
	static int SetMatrix(lua_State *L);
	static int BuildAxisRotationMatrix(lua_State *L);
	static int BuildPositionRotationMatrix(lua_State *L);
	static const Vector zero(0.0f, 0.0f, 0.0f);
	static const Vector y_axis(0.0f, 1.0f, 0.0f);
	static const Vector z_axis(0.0f, 0.0f, 1.0f);
	static int BuildOrthogonalMatrix(lua_State *L);
	static int BuildDirectionalMatrix(lua_State *L);

	// Script Util Functions:

	static int Make_RGB(lua_State *L);
	static int Make_RGBA(lua_State *L);
	static int FailMission(lua_State *L);
	static int SucceedMission(lua_State *L);
	static int ChangeSide(lua_State *L);
	static int AddScrap(lua_State *L);
	static int SetScrap(lua_State *L);
	static int GetScrap(lua_State *L);
	static int AddMaxScrap(lua_State *L);
	static int SetMaxScrap(lua_State *L);
	static int GetMaxScrap(lua_State *L);
	static int GetTime(lua_State *L);
	static int GetTug(lua_State *L);
	static int HasCargo(lua_State *L);
	static int GetDistance(lua_State *L);
	static int GetNearestObject(lua_State *L);
	static int GetNearestVehicle(lua_State *L);
	static int GetNearestBuilding(lua_State *L);
	static int GetNearestEnemy(lua_State *L);
	static int BuildObject(lua_State *L);
	static int RemoveObject(lua_State *L);
	static int GetFirstEmptyGroup(lua_State *L);
	static int SetGroup(lua_State *L);
	static int Attack(lua_State *L);
	static int Service(lua_State *L);
	static int Goto(lua_State *L);
	static int Mine(lua_State *L);
	static int Follow(lua_State *L);
	static int Defend(lua_State *L);
	static int Defend2(lua_State *L);
	static int Stop(lua_State *L);
	static int Patrol(lua_State *L);
	static int Retreat(lua_State *L);
	static int GetIn(lua_State *L);
	static int Pickup(lua_State *L);
	static int Dropoff(lua_State *L);
	static int Build(lua_State *L);
	static int LookAt(lua_State *L);
	static int AllLookAt(lua_State *L);
	static int IsOdf(lua_State *L);
	static int GetRace(lua_State *L);
	static int GetPlayerHandle(lua_State *L);
	static int IsAlive(lua_State *L);
	static int IsFlying(lua_State *L);
	static int IsAliveAndPilot(lua_State *L);
	static int IsAround(lua_State *L);
	static int InBuilding(lua_State *L);
	static int AtTerminal(lua_State *L);
	static int GetPosition(lua_State *L);
	static int GetPosition2(lua_State *L);
	static int GetFront(lua_State *L);
	static int SetPosition(lua_State *L);
	static int Damage(lua_State *L);
	static int GetHealth(lua_State *L);
	static int GetCurHealth(lua_State *L);
	static int GetMaxHealth(lua_State *L);
	static int SetCurHealth(lua_State *L);
	static int SetMaxHealth(lua_State *L);
	static int AddHealth(lua_State *L);
	static int GetAmmo(lua_State *L);
	static int GetCurAmmo(lua_State *L);
	static int GetMaxAmmo(lua_State *L);
	static int SetCurAmmo(lua_State *L);
	static int SetMaxAmmo(lua_State *L);
	static int AddAmmo(lua_State *L);
	static int GetTeamNum(lua_State *L);
	static int SetTeamNum(lua_State *L);
	static int SetVelocity(lua_State *L);
	static int SetControls(lua_State *L);
	static int GetWhoShotMe(lua_State *L);
	static int GetLastEnemyShot(lua_State *L);
	static int GetLastFriendShot(lua_State *L);
	static int DefaultAllies(lua_State *L);
	static int TeamplayAllies(lua_State *L);
	static int Ally(lua_State *L);
	static int UnAlly(lua_State *L);
	static int IsTeamAllied(lua_State *L);
	static int IsAlly(lua_State *L);
	static int AudioMessage(lua_State *L);
	static int IsAudioMessageDone(lua_State *L);
	static int StopAudioMessage(lua_State *L);
	static int PreloadAudioMessage(lua_State *L);
	static int PurgeAudioMessage(lua_State *L);
	static int PreloadMusicMessage(lua_State *L);
	static int PurgeMusicMessage(lua_State *L);
	static int LoadJukeFile(lua_State *L);
	static int SetMusicIntensity(lua_State *L);
	/* // AiPath pointer data type not supported from Lua. -GBD
	static AiPath **NewAiPath(lua_State *L);
	static AiPath **GetAiPath(lua_State *L, int n);
	static int FindAiPath(lua_State *L);
	static int FreeAiPath(lua_State *L);
	return 0;
	*/
	static int GetAiPaths(lua_State *L);
	static int SetPathType(lua_State *L);
	static int SetPathOneWay(lua_State *L);
	static int SetPathRoundTrip(lua_State *L);
	static int SetPathLoop(lua_State *L);
	static int SetIndependence(lua_State *L);
	static int IsInfo(lua_State *L);
	static int StartCockpitTimer(lua_State *L);
	static int StartCockpitTimerUp(lua_State *L);
	static int StopCockpitTimer(lua_State *L);
	static int HideCockpitTimer(lua_State *L);
	static int GetCockpitTimer(lua_State *L);
	static int StartEarthQuake(lua_State *L);
	static int UpdateEarthQuake(lua_State *L);
	static int StopEarthQuake(lua_State *L);
	static int IsPerson(lua_State *L);
	static int GetCurWorld(lua_State *L);
	static int GetVarItemStr(lua_State *L);
	static int GetVarItemInt(lua_State *L);
	static int GetCVarItemInt(lua_State *L);
	static int GetCVarItemStr(lua_State *L);
	static int PreloadODF(lua_State *L);
	static int TerrainFindFloor(lua_State *L);
	static int AddPilotByHandle(lua_State *L);
	static int PrintConsoleMessage(lua_State *L);
	static int GetRandomFloat(lua_State *L);
	static int IsDeployed(lua_State *L);
	static int Deploy(lua_State *L);
	static int IsSelected(lua_State *L);
	static int SetWeaponMask(lua_State *L);
	static int GiveWeapon(lua_State *L);
	static int FireAt(lua_State *L);
	static int IsFollowing(lua_State *L);
	static int WhoFollowing(lua_State *L);
	static int SetUserTarget(lua_State *L);
	static int GetUserTarget(lua_State *L);
	static int SetPerceivedTeam(lua_State *L);
	static int GetCurrentCommand(lua_State *L);
	static int GetCurrentWho(lua_State *L);
	static int EjectPilot(lua_State *L);
	static int HopOut(lua_State *L);
	static int KillPilot(lua_State *L);
	static int RemovePilot(lua_State *L);
	static int HoppedOutOf(lua_State *L);
	static int GetCameraPosition(lua_State *L);
	static int SetCameraPosition(lua_State *L);
	static int ResetCameraPosition(lua_State *L);
	static int CalcCRC(lua_State *L);
	static int IFace_Exec(lua_State *L);
	static int IFace_Activate(lua_State *L);
	static int IFace_Deactivate(lua_State *L);
	static int IFace_CreateCommand(lua_State *L);
	static int IFace_CreateString(lua_State *L);
	static int IFace_SetString(lua_State *L);
	static int IFace_GetString(lua_State *L);
	static int IFace_CreateInteger(lua_State *L);
	static int IFace_SetInteger(lua_State *L);
	static int IFace_GetInteger(lua_State *L);
	static int IFace_SetIntegerRange(lua_State *L);
	static int IFace_CreateFloat(lua_State *L);
	static int IFace_SetFloat(lua_State *L);
	static int IFace_GetFloat(lua_State *L);
	static int IFace_ClearListBox(lua_State *L);
	static int IFace_AddTextItem(lua_State *L);
	static int IFace_GetSelectedItem(lua_State *L);
	static int SetSkill(lua_State *L);
	static int SetAIP(lua_State *L);
	static int LogFloat(lua_State *L);
	static int GetInstantMyForce(lua_State *L);
	static int GetInstantCompForce(lua_State *L);
	static int GetInstantDifficulty(lua_State *L);
	static int GetInstantGoal(lua_State *L);
	static int GetInstantType(lua_State *L);
	static int GetInstantFlag(lua_State *L);
	static int GetInstantMySide(lua_State *L);
	/* // Function exists in ScriptUtils.h, but doesn't exist in the .cpp or bzone.lib. No such function.
	static int StoppedPlayback(lua_State *L);
	*/
	static int CameraReady(lua_State *L);
	static int CameraPath(lua_State *L);
	static int CameraPathDir(lua_State *L);
	static int PanDone(lua_State *L);
	static int CameraObject(lua_State *L);
	static int CameraFinish(lua_State *L);
	static int CameraCancelled(lua_State *L);
	static int FreeCamera(lua_State *L);
	static int FreeFinish(lua_State *L);
	static int PlayMovie(lua_State *L);
	static int StopMovie(lua_State *L);
	static int PlayMove(lua_State *L);
	static int PlayRecording(lua_State *L);
	static int PlaybackVehicle(lua_State *L);
	static int SetAnimation(lua_State *L);
	static int GetAnimationFrame(lua_State *L);
	static int StartAnimation(lua_State *L);
	static int MaskEmitter(lua_State *L);
	static int StartEmitter(lua_State *L);
	static int StopEmitter(lua_State *L);
	/* // Depreciated functions.
	static int SaveObjects(lua_State *L);
	static int LoadObjects(lua_State *L);
	static int IgnoreSync(lua_State *L);
	static int IsRecording(lua_State *L);
	*/
	static int SetObjectiveOn(lua_State *L);
	static int SetObjectiveOff(lua_State *L);
	static int SetObjectiveName(lua_State *L);
	static int ClearObjectives(lua_State *L);
	static long GetColor(const char * const colorname);
	static int AddObjective(lua_State *L);
	static int IsWithin(lua_State *L);
	static int CountUnitsNearObject(lua_State *L);
	static int SetAvoidType(lua_State *L);
	static int Annoy(lua_State *L);
	static int ClearThrust(lua_State *L);
	static int SetVerbose(lua_State *L);
	static int ClearIdleAnims(lua_State *L);
	static int AddIdleAnim(lua_State *L);
	static int IsIdle(lua_State *L);
	static int CountThreats(lua_State *L);
	static int SpawnBirds(lua_State *L);
	static int RemoveBirds(lua_State *L);
	static int SetColorFade(lua_State *L);
	static int StopCheats(lua_State *L);
	static int CalcCliffs(lua_State *L);
	static int StartSoundEffect(lua_State *L);
	static int FindSoundEffect(lua_State *L);
	static int StopSoundEffect(lua_State *L);
	static int GetObjectByTeamSlot(lua_State *L);
	static int IsNetworkOn(lua_State *L);
	static int ImServer(lua_State *L);
	static int ImDedicatedServer(lua_State *L);
	static int IsTeamplayOn(lua_State *L);
	static int CountPlayers(lua_State *L);
	static int GetRaceOfTeam(lua_State *L);
	static int IsPlayer(lua_State *L);
	static int GetPlayerName(lua_State *L);
	static int WhichTeamGroup(lua_State *L);
	static int CountAllies(lua_State *L);
	static int GetCommanderTeam(lua_State *L);
	static int GetFirstAlliedTeam(lua_State *L);
	static int GetLastAlliedTeam(lua_State *L);
	static int GetTeamplayRanges(lua_State *L);
	static int SetRandomHeadingAngle(lua_State *L);
	static int ClearTeamColors(lua_State *L);
	static int DefaultTeamColors(lua_State *L);
	static int TeamplayTeamColors(lua_State *L);
	static int SetTeamColor(lua_State *L);
	static int ClearTeamColor(lua_State *L);
	static int MakeInert(lua_State *L);
	static int GetPositionNear(lua_State *L);
	static int GetPlayerODF(lua_State *L);
	static int BuildEmptyCraftNear(lua_State *L);
	static int GetCircularPos(lua_State *L);
	static int GetSafestSpawnpoint(lua_State *L);
	static int GetSpawnpoint(lua_State *L);
	static int GetSpawnpointHandle(lua_State *L);
	static int GetRandomSpawnpoint(lua_State *L);
	static int SetTimerBox(lua_State *L);
	static int AddToMessagesBox(lua_State *L);
	static int GetDeaths(lua_State *L);
	static int GetKills(lua_State *L);
	static int GetScore(lua_State *L);
	static int SetDeaths(lua_State *L);
	static int SetKills(lua_State *L);
	static int SetScore(lua_State *L);
	static int AddDeaths(lua_State *L);
	static int AddKills(lua_State *L);
	static int AddScore(lua_State *L);
	static int SetAsUser(lua_State *L);
	static int SetNoScrapFlagByHandle(lua_State *L);
	static int ClearNoScrapFlagByHandle(lua_State *L);
	static int GetLocalPlayerTeamNumber(lua_State *L);
	static int GetLocalPlayerDPID(lua_State *L);
	static int FlagSteal(lua_State *L);
	static int FlagRecover(lua_State *L);
	static int FlagScore(lua_State *L);
	static int MoneyScore(lua_State *L);
	static int NoteGameoverByTimelimit(lua_State *L);
	static int NoteGameoverByKillLimit(lua_State *L);
	static int NoteGameoverByScore(lua_State *L);
	static int NoteGameoverByLastWithBase(lua_State *L);
	static int NoteGameoverByLastTeamWithBase(lua_State *L);
	static int NoteGameoverByNoBases(lua_State *L);
	static int DoGameover(lua_State *L);
	static int SetMPTeamRace(lua_State *L);
	static int GetTarget(lua_State *L);
	static int IFace_ConsoleCmd(lua_State *L);
	static int Network_SetString(lua_State *L);
	static int Network_SetInteger(lua_State *L);
	static int GetVelocity(lua_State *L);
	/*
	Get_CFG, // Returns the GameObjectClass's cfg string
	Get_ODF, // Returns the ODF of the object
	Get_GOClass_gCfg, // Returns the GameObjectClass's gCfg string (not 100% sure how it differs from the CFG) (It returns the ODF's BaseName. Even reads through ODF inheritence. :) ) -GBD
	Get_EntityType,
	Get_GOClass,
	Get_Weapon0Config,
	Get_Weapon1Config,
	Get_Weapon2Config,
	Get_Weapon3Config,
	Get_Weapon4Config,
	Get_Weapon0ODF,
	Get_Weapon1ODF,
	Get_Weapon2ODF,
	Get_Weapon3ODF,
	Get_Weapon4ODF,
	Get_Weapon0GOClass,
	Get_Weapon1GOClass,
	Get_Weapon2GOClass,
	Get_Weapon3GOClass,
	Get_Weapon4GOClass,
	*/
	static int GetObjInfo_CFG(lua_State *L);;
	static int GetObjInfo_ODF(lua_State *L);;
	static int GetObjInfo_GOClass_gCfg(lua_State *L);;
	static int GetObjInfo_EntityType(lua_State *L);;
	static int GetObjInfo_GOClass(lua_State *L);;
	static int Get_WeaponConfig(lua_State *L);;
	static int Get_WeaponODF(lua_State *L);;
	static int Get_WeaponGOClass(lua_State *L);;
	static int DoesODFExist(lua_State *L);
	static int IsAlive2(lua_State *L);
	static int IsFlying2(lua_State *L);
	static int IsAliveAndPilot2(lua_State *L);
	static int TranslateString2(lua_State *L);
	static int GetScavengerCurScrap(lua_State *L);
	static int GetScavengerMaxScrap(lua_State *L);
	static int SetScavengerCurScrap(lua_State *L);
	static int SetScavengerMaxScrap(lua_State *L);
	static int SelfDamage(lua_State *L);
	static int WantBotKillMessages(lua_State *L);
	static int EnableHighTPS(lua_State *L);
	static int GetLocalUserInspectHandle(lua_State *L);
	static int GetLocalUserSelectHandle(lua_State *L);
	static int ResetTeamSlot(lua_State *L);
	static int GetCategoryTypeOverride(lua_State *L);
	static int GetCategoryType(lua_State *L);
	static int GetODFHexInt(lua_State *L);
	static int GetODFInt(lua_State *L);
	static int GetODFLong(lua_State *L);
	static int GetODFFloat(lua_State *L);
	static int GetODFDouble(lua_State *L);
	static int GetODFChar(lua_State *L);
	static int GetODFBool(lua_State *L);
	static int GetODFString(lua_State *L);;
	static int GetODFColor(lua_State *L);
	static int GetODFVector(lua_State *L);
	/* // Functions removed, the above functions handle it internally.
	static int OpenODF(lua_State *L);
	static int CloseODF(lua_State *L);
	*/
	static int NoteGameoverWithCustomMessage(lua_State *L);
	static int SetBestGroup(lua_State *L);
	static int GetGroup(lua_State *L);;
	static int GetGroupCount(lua_State *L);
	static int SetLifespan(lua_State *L);
	static int DoesFileExist(lua_State *L);
	static int LoadFile(lua_State *L);
	static int StartAudio3D(lua_State *L);
	static int StartAudio2D(lua_State *L);
	static int IsAudioPlaying(lua_State *L);
	static int StopAudio(lua_State *L);
	static int PauseAudio(lua_State *L);
	static int ResumeAudio(lua_State *L);
	static int SetVolume(lua_State *L);
	static int SetPan(lua_State *L);
	static int SetRate(lua_State *L);
	static int GetAudioFileDuration(lua_State *L);
	static int IsPlayingLooped(lua_State *L);
	static int GetNearestPowerup(lua_State *L);
	static int GetNearestPerson(lua_State *L);
	static int SetCommand(lua_State *L);
	static int SetGravity(lua_State *L);
	static int SetAutoGroupUnits(lua_State *L);
	static int KickPlayer(lua_State *L);
	static int TerrainIsWater(lua_State *L);
	static int GetTerrainHeightAndNormal(lua_State *L);
	static int WriteToFile(lua_State *L);
	static int GetPathPoints(lua_State *L);
	static int GetOwner(lua_State *L);
	static int SetTarget(lua_State *L);
	static int SetOwner(lua_State *L);
	static int SetPilotClass(lua_State *L);
	static int AllowRandomTracks(lua_State *L);
	static int SetFFATeamColors(lua_State *L);
	static int SetTeamStratColors(lua_State *L);
	static int GetFFATeamColor(lua_State *L);
	static int GetFFATeamColorVector(lua_State *L);
	static int GetTeamStratColor(lua_State *L);
	static int GetTeamStratColorVector(lua_State *L);
	static int SwapTeamStratColors(lua_State *L);
	static int GetTeamColorsAreFFA(lua_State *L);
	static int SetTeamColors(lua_State *L);
	static int AddPower(lua_State *L);
	static int SetPower(lua_State *L);
	static int GetPower(lua_State *L);
	static int GetMaxPower(lua_State *L);
	static int AddMaxPower(lua_State *L);
	static int SetMaxPower(lua_State *L);
	static int GetTeamStratIndividualColor(lua_State *L);
	static int GetTeamStratIndividualColorVector(lua_State *L);
	static int GetMapTRNFilename(lua_State *L);
	static int IsNotDeadAndPilot2(lua_State *L);
	static int GetLabel(lua_State *L);
	static int SetLabel(lua_State *L);
	static int GetTap(lua_State *L);
	static int SetTap(lua_State *L);
	static int GetCurLocalAmmo(lua_State *L);
	static int AddLocalAmmo(lua_State *L);
	static int GetMaxLocalAmmo(lua_State *L);
	static int SetCurLocalAmmo(lua_State *L);
	static int GetNetworkListItem(lua_State *L);
	static int GetNetworkListCount(lua_State *L);
	static int GetTeamRelationship(lua_State *L);
	static int HasPilot(lua_State *L);
	static int GetPilotClass(lua_State *L);
	static int GetBaseScrapCost(lua_State *L);
	static int GetActualScrapCost(lua_State *L);
	static int PetWatchdogThread(lua_State *L);
	static int GetPerceivedTeam(lua_State *L);
	static int SetLastCurrentPosition(lua_State *L);
	static int GetRemainingLifespan(lua_State *L);
	static int GetAllSpawnpoints(lua_State *L);
	static int GetPlan(lua_State *L);
	static int GetIndependence(lua_State *L);
	static int GetSkill(lua_State *L);
	static int GetObjectiveName(lua_State *L);
	static int GetWeaponMask(lua_State *L);
	static int SetInterpolablePosition(lua_State *L);
	static int SecondsToTurns(lua_State *L);
	static int TurnsToSeconds(lua_State *L);
	static int GetLifeSpan(lua_State *L);
	static int GetCurrentCommandWhere(lua_State *L);
	static int GetAllGameObjectHandles(lua_State *L);
	static int GetOmega(lua_State *L);
	static int SetOmega(lua_State *L);
	static int IsCraftButNotPerson(lua_State *L);
	static int IsCraftOrPerson(lua_State *L);
	static int IsBuilding(lua_State *L);
	static int IsPowerup(lua_State *L);
	static int SetCanSnipe(lua_State *L);
	static int GetCanSnipe(lua_State *L);
	static int WhoIsTargeting(lua_State *L);
	static int SetAngle(lua_State *L);
	static int CameraPos(lua_State *L);
	static int ReplaceObject(lua_State *L);

	// Lua script utils functions
	static const luaL_Reg sLuaScriptUtils[] = {
		{ "GetHandle", GetHandle },
		{ "Make_RGB", Make_RGB },
		{ "Make_RGBA", Make_RGBA },
		// BZ2 Script Utils Inlines.
		{ "FailMission", FailMission },
		{ "SucceedMission", SucceedMission },
		{ "ChangeSide", ChangeSide },
		{ "AddScrap", AddScrap },
		{ "SetScrap", SetScrap },
		{ "GetScrap", GetScrap },
		{ "GetMaxScrap", GetMaxScrap },
		{ "GetTime", GetTime },
		{ "GetTug", GetTug },
		{ "HasCargo", HasCargo },
		{ "GetDistance", GetDistance },
		{ "GetNearestObject", GetNearestObject },
		{ "GetNearestVehicle", GetNearestVehicle },
		{ "GetNearestBuilding", GetNearestBuilding },
		{ "GetNearestEnemy", GetNearestEnemy },
		// BZ2 Script Utils Functions.
		{ "BuildObject", BuildObject },
		{ "RemoveObject", RemoveObject },
		{ "GetFirstEmptyGroup", GetFirstEmptyGroup },
		{ "SetGroup", SetGroup },
		{ "Attack", Attack },
		{ "Service", Service },
		{ "Goto", Goto },
		{ "Mine", Mine },
		{ "Follow", Follow },
		{ "Defend", Defend },
		{ "Defend2", Defend2 },
		{ "Stop", Stop },
		{ "Patrol", Patrol },
		{ "Retreat", Retreat },
		{ "GetIn", GetIn },
		{ "Pickup", Pickup },
		{ "Dropoff", Dropoff },
		{ "Build", Build },
		{ "LookAt", LookAt },
		{ "AllLookAt", AllLookAt },
		{ "IsOdf", IsOdf },
		{ "GetRace", GetRace },
		{ "GetPlayerHandle", GetPlayerHandle },
		{ "IsAlive", IsAlive },
		{ "IsFlying", IsFlying },
		{ "IsAliveAndPilot", IsAliveAndPilot },
		{ "IsAround", IsAround },
		{ "InBuilding", InBuilding },
		{ "AtTerminal", AtTerminal },
		{ "GetPosition", GetPosition },
		{ "GetPosition2", GetPosition2 },
		{ "GetFront", GetFront },
		{ "SetPosition", SetPosition },
		{ "Damage", Damage },
		{ "GetHealth", GetHealth },
		{ "GetCurHealth", GetCurHealth },
		{ "GetMaxHealth", GetMaxHealth },
		{ "SetCurHealth", SetCurHealth },
		{ "SetMaxHealth", SetMaxHealth },
		{ "AddHealth", AddHealth },
		{ "GetAmmo", GetAmmo },
		{ "GetCurAmmo", GetCurAmmo },
		{ "GetMaxAmmo", GetMaxAmmo },
		{ "SetCurAmmo", SetCurAmmo },
		{ "SetMaxAmmo", SetMaxAmmo },
		{ "AddAmmo", AddAmmo },
		{ "GetTeamNum", GetTeamNum },
		{ "SetTeamNum", SetTeamNum },
		{ "SetVelocity", SetVelocity },
		{ "SetControls", SetControls },
		{ "GetWhoShotMe", GetWhoShotMe },
		{ "GetLastEnemyShot", GetLastEnemyShot },
		{ "GetLastFriendShot", GetLastFriendShot },
		{ "DefaultAllies", DefaultAllies },
		{ "TeamplayAllies", TeamplayAllies },
		{ "Ally", Ally },
		{ "UnAlly", UnAlly },
		{ "IsTeamAllied", IsTeamAllied },
		{ "IsAlly", IsAlly },
		{ "AudioMessage", AudioMessage },
		{ "IsAudioMessageDone", IsAudioMessageDone },
		{ "StopAudioMessage", StopAudioMessage },
		{ "PreloadAudioMessage", PreloadAudioMessage },
		{ "PurgeAudioMessage", PurgeAudioMessage },
		{ "PreloadMusicMessage", PreloadMusicMessage },
		{ "PurgeMusicMessage", PurgeMusicMessage },
		{ "LoadJukeFile", LoadJukeFile },
		{ "SetMusicIntensity", SetMusicIntensity },
		//{ "FindAiPath", FindAiPath },
		//{ "FreeAiPath", FreeAiPath },
		{ "GetAiPaths", GetAiPaths },
		{ "SetPathType", SetPathType },
		{ "SetIndependence", SetIndependence },
		{ "IsInfo", IsInfo },
		{ "StartCockpitTimer", StartCockpitTimer },
		{ "StartCockpitTimerUp", StartCockpitTimerUp },
		{ "StopCockpitTimer", StopCockpitTimer },
		{ "HideCockpitTimer", HideCockpitTimer },
		{ "GetCockpitTimer", GetCockpitTimer },
		{ "StartEarthQuake", StartEarthQuake },
		{ "UpdateEarthQuake", UpdateEarthQuake },
		{ "StopEarthQuake", StopEarthQuake },
		{ "IsPerson", IsPerson },
		{ "GetCurWorld", GetCurWorld },
		{ "GetVarItemStr", GetVarItemStr },
		{ "GetVarItemInt", GetVarItemInt },
		{ "GetCVarItemInt", GetCVarItemInt },
		{ "GetCVarItemStr", GetCVarItemStr },
		{ "PreloadODF", PreloadODF },
		{ "TerrainFindFloor", TerrainFindFloor },
		{ "AddPilotByHandle", AddPilotByHandle },
		{ "PrintConsoleMessage", PrintConsoleMessage },
		{ "GetRandomFloat", GetRandomFloat },
		{ "IsDeployed", IsDeployed },
		{ "Deploy", Deploy },
		{ "IsSelected", IsSelected },
		{ "SetWeaponMask", SetWeaponMask },
		{ "GiveWeapon", GiveWeapon },
		{ "FireAt", FireAt },
		{ "IsFollowing", IsFollowing },
		{ "WhoFollowing", WhoFollowing },
		{ "SetUserTarget", SetUserTarget },
		{ "GetUserTarget", GetUserTarget },
		{ "SetPerceivedTeam", SetPerceivedTeam },
		{ "GetCurrentCommand", GetCurrentCommand },
		{ "GetCurrentWho", GetCurrentWho },
		{ "EjectPilot", EjectPilot },
		{ "HopOut", HopOut },
		{ "KillPilot", KillPilot },
		{ "RemovePilot", RemovePilot },
		{ "HoppedOutOf", HoppedOutOf },
		{ "GetCameraPosition", GetCameraPosition },
		{ "SetCameraPosition", SetCameraPosition },
		{ "ResetCameraPosition", ResetCameraPosition },
		{ "IFace_Exec", IFace_Exec },
		{ "IFace_Activate", IFace_Activate },
		{ "IFace_Deactivate", IFace_Deactivate },
		{ "IFace_CreateCommand", IFace_CreateCommand },
		{ "IFace_CreateString", IFace_CreateString },
		{ "IFace_SetString", IFace_SetString },
		{ "IFace_GetString", IFace_GetString },
		{ "IFace_CreateInteger", IFace_CreateInteger },
		{ "IFace_SetInteger", IFace_SetInteger },
		{ "IFace_GetInteger", IFace_GetInteger },
		{ "IFace_SetIntegerRange", IFace_SetIntegerRange },
		{ "IFace_CreateFloat", IFace_CreateFloat },
		{ "IFace_SetFloat", IFace_SetFloat },
		{ "IFace_GetFloat", IFace_GetFloat },
		{ "IFace_ClearListBox", IFace_ClearListBox },
		{ "IFace_AddTextItem", IFace_AddTextItem },
		{ "IFace_GetSelectedItem", IFace_GetSelectedItem },
		{ "SetSkill", SetSkill },
		{ "SetAIP", SetAIP },
		{ "LogFloat", LogFloat },
		{ "GetInstantMyForce", GetInstantMyForce },
		{ "GetInstantCompForce", GetInstantCompForce },
		{ "GetInstantDifficulty", GetInstantDifficulty },
		{ "GetInstantGoal", GetInstantGoal },
		{ "GetInstantType", GetInstantType },
		{ "GetInstantFlag", GetInstantFlag },
		{ "GetInstantMySide", GetInstantMySide },
		//{ "StoppedPlayback", StoppedPlayback }, // No such function.
		{ "CameraReady", CameraReady },
		{ "CameraPath", CameraPath },
		{ "CameraPathDir", CameraPathDir },
		{ "PanDone", PanDone },
		{ "CameraObject", CameraObject },
		{ "CameraFinish", CameraFinish },
		{ "CameraCancelled", CameraCancelled },
		{ "PlayMovie", PlayMovie },
		{ "StopMovie", StopMovie },
		{ "PlayMove", PlayMove },
		{ "PlayRecording", PlayRecording },
		{ "PlaybackVehicle", PlaybackVehicle },
		{ "SetAnimation", SetAnimation },
		{ "GetAnimationFrame", GetAnimationFrame },
		{ "StartAnimation", StartAnimation },
		{ "MaskEmitter", MaskEmitter },
		{ "StartEmitter", StartEmitter },
		{ "StopEmitter", StopEmitter },
		//{ "SaveObjects", SaveObjects },
		//{ "LoadObjects", LoadObjects },
		//{ "IgnoreSync", IgnoreSync },
		//{ "IsRecording", IsRecording },
		{ "SetObjectiveOn", SetObjectiveOn },
		{ "SetObjectiveOff", SetObjectiveOff },
		{ "SetObjectiveName", SetObjectiveName },
		{ "ClearObjectives", ClearObjectives },
		{ "AddObjective", AddObjective },
		{ "IsWithin", IsWithin },
		{ "CountUnitsNearObject", CountUnitsNearObject },
		{ "SpawnBirds", SpawnBirds },
		{ "RemoveBirds", RemoveBirds },
		{ "SetColorFade", SetColorFade },
		{ "StopCheats", StopCheats },
		{ "CalcCliffs", CalcCliffs },
		{ "StartSoundEffect", StartSoundEffect },
		{ "FindSoundEffect", FindSoundEffect },
		{ "StopSoundEffect", StopSoundEffect },
		{ "GetObjectByTeamSlot", GetObjectByTeamSlot },
		{ "IsNetGame", IsNetworkOn },
		{ "IsHosting", ImServer },
		{ "IsNetworkOn", IsNetworkOn },
		{ "ImServer", ImServer },
		{ "ImDedicatedServer", ImDedicatedServer },
		{ "IsTeamplayOn", IsTeamplayOn },
		{ "CountPlayers", CountPlayers },
		{ "GetRaceOfTeam", GetRaceOfTeam },
		{ "IsPlayer", IsPlayer },
		{ "GetPlayerName", GetPlayerName },
		{ "WhichTeamGroup", WhichTeamGroup },
		{ "CountAllies", CountAllies },
		{ "GetCommanderTeam", GetCommanderTeam },
		{ "GetFirstAlliedTeam", GetFirstAlliedTeam },
		{ "GetLastAlliedTeam", GetLastAlliedTeam },
		{ "GetTeamplayRanges", GetTeamplayRanges },
		{ "SetRandomHeadingAngle", SetRandomHeadingAngle },
		{ "ClearTeamColors", ClearTeamColors },
		{ "DefaultTeamColors", DefaultTeamColors },
		{ "TeamplayTeamColors", TeamplayTeamColors },
		{ "SetTeamColor", SetTeamColor },
		{ "ClearTeamColor", ClearTeamColor },
		{ "MakeInert", MakeInert },
		{ "GetPositionNear", GetPositionNear },
		{ "GetPlayerODF", GetPlayerODF },
		{ "BuildEmptyCraftNear", BuildEmptyCraftNear },
		{ "GetCircularPos", GetCircularPos },
		{ "GetSafestSpawnpoint", GetSafestSpawnpoint },
		{ "GetSpawnpoint", GetSpawnpoint },
		{ "GetSpawnpointHandle", GetSpawnpointHandle },
		{ "GetRandomSpawnpoint", GetRandomSpawnpoint },
		{ "SetTimerBox", SetTimerBox },
		{ "AddToMessagesBox", AddToMessagesBox },
		{ "GetDeaths", GetDeaths },
		{ "GetKills", GetKills },
		{ "GetScore", GetScore },
		{ "SetDeaths", SetDeaths },
		{ "SetKills", SetKills },
		{ "SetScore", SetScore },
		{ "AddDeaths", AddDeaths },
		{ "AddKills", AddKills },
		{ "AddScore", AddScore },
		{ "SetAsUser", SetAsUser },
		{ "GetTarget", GetTarget },
		{ "IFace_ConsoleCmd", IFace_ConsoleCmd },
		{ "GetVelocity", GetVelocity },
		{ "GetCfg", GetObjInfo_CFG },
		{ "GetOdf", GetObjInfo_ODF },
		{ "GetBase", GetObjInfo_GOClass_gCfg, },
		{ "GetClassSig", GetObjInfo_EntityType },
		{ "GetClassLabel", GetObjInfo_GOClass },
		{ "GetWeaponConfig ", Get_WeaponConfig },
		{ "GetWeaponODF", Get_WeaponODF },
		{ "GetWeaponGOClass", Get_WeaponGOClass },
		{ "DoesODFExist", DoesODFExist },
		{ "IsAlive2", IsAlive2 },
		{ "IsFlying2", IsFlying2 },
		{ "IsAliveAndPilot2", IsAliveAndPilot2 },
		{ "TranslateString", TranslateString2 },
		{ "GetScavengerCurScrap", GetScavengerCurScrap },
		{ "GetScavengerMaxScrap", GetScavengerMaxScrap },
		{ "SetScavengerCurScrap", SetScavengerCurScrap },
		{ "SetScavengerMaxScrap", SetScavengerMaxScrap },
		//{ "DamageF", DamageF },
		{ "SelfDamage", SelfDamage },
		{ "WantBotKillMessages", WantBotKillMessages },
		{ "EnableHighTPS", EnableHighTPS },
		{ "GetLocalUserInspectHandle", GetLocalUserInspectHandle },
		{ "GetLocalUserSelectHandle", GetLocalUserSelectHandle },
		{ "ResetTeamSlot", ResetTeamSlot },
		{ "GetCategoryTypeOverride", GetCategoryTypeOverride },
		{ "GetCategoryType", GetCategoryType },
		{ "GetODFHexInt", GetODFBool },
		{ "GetODFInt", GetODFInt },
		{ "GetODFLong", GetODFLong },
		{ "GetODFFloat", GetODFFloat },
		{ "GetODFDouble", GetODFDouble },
		{ "GetODFBool", GetODFBool },
		{ "GetODFString", GetODFString },
		{ "GetODFColor", GetODFColor },
		{ "GetODFVector", GetODFVector },
		//{ "OpenODF", OpenODF },
		//{ "CloseODF", CloseODF },
		{ "NoteGameoverWithCustomMessage", NoteGameoverWithCustomMessage },
		{ "SetBestGroup", SetBestGroup },
		{ "GetGroup", GetGroup },
		{ "GetGroupCount", GetGroupCount },
		{ "SetLifespan", SetLifespan },
		{ "DoesFileExist", DoesFileExist },
		{ "LoadFile", LoadFile },
		{ "StartAudio3D", StartAudio3D },
		{ "StartAudio2D", StartAudio2D },
		{ "IsAudioPlaying", IsAudioPlaying },
		{ "StopAudio", StopAudio },
		{ "PauseAudio", PauseAudio },
		{ "ResumeAudio", ResumeAudio },
		{ "SetVolume", SetVolume },
		{ "SetPan", SetPan },
		{ "SetRate", SetRate },
		{ "GetAudioFileDuration", GetAudioFileDuration },
		{ "IsPlayingLooped", IsPlayingLooped },
		{ "GetNearestPowerup", GetNearestPowerup },
		{ "GetNearestPerson", GetNearestPerson },
		{ "SetCommand", SetCommand },
		{ "SetGravity", SetGravity },
		{ "SetAutoGroupUnits", SetAutoGroupUnits },
		{ "KickPlayer", KickPlayer },
		{ "TerrainIsWater", TerrainIsWater },
		{ "GetTerrainHeightAndNormal", GetTerrainHeightAndNormal },
		{ "WriteToFile", WriteToFile }, //{ "GetOutputPath", GetOutputPath },
		{ "GetPathPoints", GetPathPoints },
		{ "GetOwner", GetOwner },
		{ "SetTarget", SetTarget },
		{ "SetOwner", SetOwner },
		{ "SetPilotClass", SetPilotClass },
		{ "AllowRandomTracks", AllowRandomTracks },
		{ "SetFFATeamColors", SetFFATeamColors },
		{ "SetTeamStratColors", SetTeamStratColors },
		{ "GetFFATeamColor", GetFFATeamColor },
		{ "GetFFATeamColorVector", GetFFATeamColorVector },
		{ "GetTeamStratColor", GetTeamStratColor },
		{ "GetTeamStratColorVector", GetTeamStratColorVector },
		{ "SwapTeamStratColors", SwapTeamStratColors },
		{ "GetTeamColorsAreFFA", GetTeamColorsAreFFA },
		{ "SetTeamColors", SetTeamColors },
		{ "AddPower", AddPower },
		{ "SetPower", SetPower },
		{ "GetPower", GetPower },
		{ "GetMaxPower", GetMaxPower },
		{ "AddMaxPower", AddMaxPower },
		{ "AddMaxScrap", AddMaxScrap },
		{ "SetMaxScrap", SetMaxScrap },
		{ "SetMaxPower", SetMaxPower },
		{ "GetTeamStratIndividualColor", GetTeamStratIndividualColor },
		{ "GetTeamStratIndividualColorVector", GetTeamStratIndividualColorVector },
		{ "GetMapTRNFilename", GetMapTRNFilename },
		{ "IsNotDeadAndPilot2", IsNotDeadAndPilot2 },
		{ "GetLabel", GetLabel },
		{ "SetLabel", SetLabel },
		{ "GetTap", GetTap },
		{ "SetTap", SetTap },
		{ "GetCurLocalAmmo", GetCurLocalAmmo },
		{ "AddLocalAmmo", AddLocalAmmo },
		{ "GetMaxLocalAmmo", GetMaxLocalAmmo },
		{ "SetCurLocalAmmo", SetCurLocalAmmo },
		{ "GetNetworkListItem", GetNetworkListItem },
		{ "GetNetworkListCount", GetNetworkListCount },
		{ "GetTeamRelationship", GetTeamRelationship },
		// 1.3.6.4+
		{ "HasPilot", HasPilot },
		{ "GetPilotClass", GetPilotClass },
		{ "GetBaseScrapCost", GetBaseScrapCost },
		{ "GetActualScrapCost", GetActualScrapCost },
		{ "PetWatchdogThread", PetWatchdogThread },
		{ "GetPerceivedTeam", GetPerceivedTeam },
		{ "SetLastCurrentPosition", SetLastCurrentPosition },
		{ "GetRemainingLifespan", GetRemainingLifespan },
		{ "GetAllSpawnpoints", GetAllSpawnpoints },
		// 1.3.7.0+
		{ "GetPlan", GetPlan },
		{ "GetIndependence", GetIndependence },
		{ "GetSkill", GetSkill },
		{ "GetWeaponMask", GetWeaponMask },
		{ "SetInterpolablePosition", SetInterpolablePosition },
		{ "SecondsToTurns", SecondsToTurns },
		{ "TurnsToSeconds", TurnsToSeconds },
		{ "GetLifeSpan", GetLifeSpan },
		// 1.3.7.2+
		{ "GetCurrentCommandWhere", GetCurrentCommandWhere },
		{ "GetAllGameObjectHandles", GetAllGameObjectHandles },
		{ "GetOmega", GetOmega },
		{ "SetOmega", SetOmega },
		{ "IsCraftButNotPerson", IsCraftButNotPerson },
		{ "IsCraftOrPerson", IsCraftOrPerson },
		{ "IsBuilding", IsBuilding },
		{ "IsPowerup", IsPowerup },
		{ "SetCanSnipe", SetCanSnipe },
		{ "GetCanSnipe", GetCanSnipe },
		{ "WhoIsTargeting", WhoIsTargeting },
		// BZScriptor Backwards Compatability.
		{ "SetAngle", SetAngle },
		{ "CameraPos", CameraPos },
		{ "ReplaceObject", ReplaceObject },


		// Math stuffs.
		{ "SetVector", SetVector },
		{ "DotProduct", DotProduct },
		{ "CrossProduct", CrossProduct },
		{ "Normalize", Normalize },
		{ "Length", Length },
		{ "LengthSquared", LengthSquared },
		{ "Distance2D", Distance2D },
		{ "Distance2DSquared", Distance2DSquared },
		{ "Distance3D", Distance3D },
		{ "Distance3DSquared", Distance3DSquared },
		{ "SetMatrix", SetMatrix },
		{ "BuildAxisRotationMatrix", BuildAxisRotationMatrix },
		{ "BuildPositionRotationMatrix", BuildPositionRotationMatrix },
		{ "BuildOrthogonalMatrix", BuildOrthogonalMatrix },
		{ "BuildDirectionalMatrix", BuildDirectionalMatrix },
		{ NULL, NULL }
	};




	// read a lua value from the file
	static bool LoadValue(lua_State *L, bool push);

	// save a Lua value to the file
	static bool SaveValue(lua_State *L, int i);
}